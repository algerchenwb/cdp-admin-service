// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.15.8
// source: location_seat_service.proto

package diskless_cloud_image

import (
	common "gitlab.vrviu.com/diskless_stack/diskless_stack/protocol/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LocationManagerState int32

const (
	LocationManagerState_LocationUnknown             LocationManagerState = 0
	LocationManagerState_LocationManagerStateEnable  LocationManagerState = 1
	LocationManagerState_LocationManagerStateDisable LocationManagerState = 2
)

// Enum value maps for LocationManagerState.
var (
	LocationManagerState_name = map[int32]string{
		0: "LocationUnknown",
		1: "LocationManagerStateEnable",
		2: "LocationManagerStateDisable",
	}
	LocationManagerState_value = map[string]int32{
		"LocationUnknown":             0,
		"LocationManagerStateEnable":  1,
		"LocationManagerStateDisable": 2,
	}
)

func (x LocationManagerState) Enum() *LocationManagerState {
	p := new(LocationManagerState)
	*p = x
	return p
}

func (x LocationManagerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocationManagerState) Descriptor() protoreflect.EnumDescriptor {
	return file_location_seat_service_proto_enumTypes[0].Descriptor()
}

func (LocationManagerState) Type() protoreflect.EnumType {
	return &file_location_seat_service_proto_enumTypes[0]
}

func (x LocationManagerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocationManagerState.Descriptor instead.
func (LocationManagerState) EnumDescriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{0}
}

type SeatManagerState int32

const (
	SeatManagerState_SeatManagerStateUnknown SeatManagerState = 0
	SeatManagerState_SeatManagerStateEnable  SeatManagerState = 1
	SeatManagerState_SeatManagerStateDisable SeatManagerState = 2
)

// Enum value maps for SeatManagerState.
var (
	SeatManagerState_name = map[int32]string{
		0: "SeatManagerStateUnknown",
		1: "SeatManagerStateEnable",
		2: "SeatManagerStateDisable",
	}
	SeatManagerState_value = map[string]int32{
		"SeatManagerStateUnknown": 0,
		"SeatManagerStateEnable":  1,
		"SeatManagerStateDisable": 2,
	}
)

func (x SeatManagerState) Enum() *SeatManagerState {
	p := new(SeatManagerState)
	*p = x
	return p
}

func (x SeatManagerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeatManagerState) Descriptor() protoreflect.EnumDescriptor {
	return file_location_seat_service_proto_enumTypes[1].Descriptor()
}

func (SeatManagerState) Type() protoreflect.EnumType {
	return &file_location_seat_service_proto_enumTypes[1]
}

func (x SeatManagerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeatManagerState.Descriptor instead.
func (SeatManagerState) EnumDescriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{1}
}

type SeatType int32

const (
	SeatType_SeatTypeDisklessUnknown  SeatType = 0
	SeatType_SeatTypeDisklessComputer SeatType = 1 // 1.0无盘电脑
	SeatType_SeatTypeBoxStreamCloud   SeatType = 2 // 盒子串流云主机
)

// Enum value maps for SeatType.
var (
	SeatType_name = map[int32]string{
		0: "SeatTypeDisklessUnknown",
		1: "SeatTypeDisklessComputer",
		2: "SeatTypeBoxStreamCloud",
	}
	SeatType_value = map[string]int32{
		"SeatTypeDisklessUnknown":  0,
		"SeatTypeDisklessComputer": 1,
		"SeatTypeBoxStreamCloud":   2,
	}
)

func (x SeatType) Enum() *SeatType {
	p := new(SeatType)
	*p = x
	return p
}

func (x SeatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeatType) Descriptor() protoreflect.EnumDescriptor {
	return file_location_seat_service_proto_enumTypes[2].Descriptor()
}

func (SeatType) Type() protoreflect.EnumType {
	return &file_location_seat_service_proto_enumTypes[2]
}

func (x SeatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeatType.Descriptor instead.
func (SeatType) EnumDescriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{2}
}

type BootType int32

const (
	BootType_BOOTTYPE_KNOWN            BootType = 0 // 无盘模式
	BootType_BOOTTYPE_LOCAL            BootType = 2 // 本地启动
	BootType_BOOTTYPE_DISKLESS_UPGRADE BootType = 4 // 无盘还原模式启动
)

// Enum value maps for BootType.
var (
	BootType_name = map[int32]string{
		0: "BOOTTYPE_KNOWN",
		2: "BOOTTYPE_LOCAL",
		4: "BOOTTYPE_DISKLESS_UPGRADE",
	}
	BootType_value = map[string]int32{
		"BOOTTYPE_KNOWN":            0,
		"BOOTTYPE_LOCAL":            2,
		"BOOTTYPE_DISKLESS_UPGRADE": 4,
	}
)

func (x BootType) Enum() *BootType {
	p := new(BootType)
	*p = x
	return p
}

func (x BootType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootType) Descriptor() protoreflect.EnumDescriptor {
	return file_location_seat_service_proto_enumTypes[3].Descriptor()
}

func (BootType) Type() protoreflect.EnumType {
	return &file_location_seat_service_proto_enumTypes[3]
}

func (x BootType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootType.Descriptor instead.
func (BootType) EnumDescriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{3}
}

type AddLocationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FlowId         string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	BizId          int32                  `protobuf:"varint,2,opt,name=biz_id,proto3" json:"biz_id,omitempty"` // 业务ID
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SeatNumLimit   int32                  `protobuf:"varint,4,opt,name=seat_num_limit,proto3" json:"seat_num_limit,omitempty"`
	BoxVlanId      int32                  `protobuf:"varint,5,opt,name=box_vlan_id,proto3" json:"box_vlan_id,omitempty"`
	PcVlanId       int32                  `protobuf:"varint,6,opt,name=pc_vlan_id,proto3" json:"pc_vlan_id,omitempty"`
	InstanceVlanId int32                  `protobuf:"varint,7,opt,name=instance_vlan_id,proto3" json:"instance_vlan_id,omitempty"`
	ManagerState   int32                  `protobuf:"varint,8,opt,name=manager_state,proto3" json:"manager_state,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddLocationRequest) Reset() {
	*x = AddLocationRequest{}
	mi := &file_location_seat_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLocationRequest) ProtoMessage() {}

func (x *AddLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLocationRequest.ProtoReflect.Descriptor instead.
func (*AddLocationRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddLocationRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *AddLocationRequest) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AddLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddLocationRequest) GetSeatNumLimit() int32 {
	if x != nil {
		return x.SeatNumLimit
	}
	return 0
}

func (x *AddLocationRequest) GetBoxVlanId() int32 {
	if x != nil {
		return x.BoxVlanId
	}
	return 0
}

func (x *AddLocationRequest) GetPcVlanId() int32 {
	if x != nil {
		return x.PcVlanId
	}
	return 0
}

func (x *AddLocationRequest) GetInstanceVlanId() int32 {
	if x != nil {
		return x.InstanceVlanId
	}
	return 0
}

func (x *AddLocationRequest) GetManagerState() int32 {
	if x != nil {
		return x.ManagerState
	}
	return 0
}

type AddLocationBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`         // 下游唯一ID
	BizId         int32                  `protobuf:"varint,3,opt,name=biz_id,proto3" json:"biz_id,omitempty"` // 业务ID
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLocationBody) Reset() {
	*x = AddLocationBody{}
	mi := &file_location_seat_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLocationBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLocationBody) ProtoMessage() {}

func (x *AddLocationBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLocationBody.ProtoReflect.Descriptor instead.
func (*AddLocationBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddLocationBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *AddLocationBody) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddLocationBody) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AddLocationBody) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *AddLocationBody       `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLocationResponse) Reset() {
	*x = AddLocationResponse{}
	mi := &file_location_seat_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLocationResponse) ProtoMessage() {}

func (x *AddLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLocationResponse.ProtoReflect.Descriptor instead.
func (*AddLocationResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddLocationResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *AddLocationResponse) GetBody() *AddLocationBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type DeleteLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	BizId         int32                  `protobuf:"varint,2,opt,name=biz_id,proto3" json:"biz_id,omitempty"` // 业务ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLocationRequest) Reset() {
	*x = DeleteLocationRequest{}
	mi := &file_location_seat_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationRequest) ProtoMessage() {}

func (x *DeleteLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocationRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteLocationRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *DeleteLocationRequest) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type DeleteLocationBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLocationBody) Reset() {
	*x = DeleteLocationBody{}
	mi := &file_location_seat_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLocationBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationBody) ProtoMessage() {}

func (x *DeleteLocationBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationBody.ProtoReflect.Descriptor instead.
func (*DeleteLocationBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteLocationBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type DeleteLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *DeleteLocationBody    `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLocationResponse) Reset() {
	*x = DeleteLocationResponse{}
	mi := &file_location_seat_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationResponse) ProtoMessage() {}

func (x *DeleteLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationResponse.ProtoReflect.Descriptor instead.
func (*DeleteLocationResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteLocationResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DeleteLocationResponse) GetBody() *DeleteLocationBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type UpdateLocationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FlowId         string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	BizId          int32                  `protobuf:"varint,2,opt,name=biz_id,proto3" json:"biz_id,omitempty"` // 业务ID
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SeatNumLimit   int32                  `protobuf:"varint,4,opt,name=seat_num_limit,proto3" json:"seat_num_limit,omitempty"`
	BoxVlanId      int32                  `protobuf:"varint,5,opt,name=box_vlan_id,proto3" json:"box_vlan_id,omitempty"`
	PcVlanId       int32                  `protobuf:"varint,6,opt,name=pc_vlan_id,proto3" json:"pc_vlan_id,omitempty"`
	InstanceVlanId int32                  `protobuf:"varint,7,opt,name=instance_vlan_id,proto3" json:"instance_vlan_id,omitempty"`
	ManagerState   int32                  `protobuf:"varint,8,opt,name=manager_state,proto3" json:"manager_state,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateLocationRequest) Reset() {
	*x = UpdateLocationRequest{}
	mi := &file_location_seat_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationRequest) ProtoMessage() {}

func (x *UpdateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocationRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLocationRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *UpdateLocationRequest) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *UpdateLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLocationRequest) GetSeatNumLimit() int32 {
	if x != nil {
		return x.SeatNumLimit
	}
	return 0
}

func (x *UpdateLocationRequest) GetBoxVlanId() int32 {
	if x != nil {
		return x.BoxVlanId
	}
	return 0
}

func (x *UpdateLocationRequest) GetPcVlanId() int32 {
	if x != nil {
		return x.PcVlanId
	}
	return 0
}

func (x *UpdateLocationRequest) GetInstanceVlanId() int32 {
	if x != nil {
		return x.InstanceVlanId
	}
	return 0
}

func (x *UpdateLocationRequest) GetManagerState() int32 {
	if x != nil {
		return x.ManagerState
	}
	return 0
}

type UpdateLocationBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLocationBody) Reset() {
	*x = UpdateLocationBody{}
	mi := &file_location_seat_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLocationBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationBody) ProtoMessage() {}

func (x *UpdateLocationBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationBody.ProtoReflect.Descriptor instead.
func (*UpdateLocationBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateLocationBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type UpdateLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *UpdateLocationBody    `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLocationResponse) Reset() {
	*x = UpdateLocationResponse{}
	mi := &file_location_seat_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationResponse) ProtoMessage() {}

func (x *UpdateLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateLocationResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateLocationResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *UpdateLocationResponse) GetBody() *UpdateLocationBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type LocationInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId          int32                  `protobuf:"varint,2,opt,name=biz_id,proto3" json:"biz_id,omitempty"` // 业务ID
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SeatNumLimit   int32                  `protobuf:"varint,4,opt,name=seat_num_limit,proto3" json:"seat_num_limit,omitempty"`
	BoxVlanId      int32                  `protobuf:"varint,5,opt,name=box_vlan_id,proto3" json:"box_vlan_id,omitempty"`
	PcVlanId       int32                  `protobuf:"varint,6,opt,name=pc_vlan_id,proto3" json:"pc_vlan_id,omitempty"`
	InstanceVlanId int32                  `protobuf:"varint,7,opt,name=instance_vlan_id,proto3" json:"instance_vlan_id,omitempty"`
	ManagerState   int32                  `protobuf:"varint,8,opt,name=manager_state,proto3" json:"manager_state,omitempty"`
	CreateTime     string                 `protobuf:"bytes,9,opt,name=create_time,proto3" json:"create_time,omitempty"`  // 创建时间
	UpdateTime     string                 `protobuf:"bytes,10,opt,name=update_time,proto3" json:"update_time,omitempty"` // 用户最后更新时间
	ModifyTime     string                 `protobuf:"bytes,11,opt,name=modify_time,proto3" json:"modify_time,omitempty"` // db最后更新时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LocationInfo) Reset() {
	*x = LocationInfo{}
	mi := &file_location_seat_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationInfo) ProtoMessage() {}

func (x *LocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationInfo.ProtoReflect.Descriptor instead.
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{9}
}

func (x *LocationInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LocationInfo) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *LocationInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LocationInfo) GetSeatNumLimit() int32 {
	if x != nil {
		return x.SeatNumLimit
	}
	return 0
}

func (x *LocationInfo) GetBoxVlanId() int32 {
	if x != nil {
		return x.BoxVlanId
	}
	return 0
}

func (x *LocationInfo) GetPcVlanId() int32 {
	if x != nil {
		return x.PcVlanId
	}
	return 0
}

func (x *LocationInfo) GetInstanceVlanId() int32 {
	if x != nil {
		return x.InstanceVlanId
	}
	return 0
}

func (x *LocationInfo) GetManagerState() int32 {
	if x != nil {
		return x.ManagerState
	}
	return 0
}

func (x *LocationInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *LocationInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *LocationInfo) GetModifyTime() string {
	if x != nil {
		return x.ModifyTime
	}
	return ""
}

type GetLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	BizId         int32                  `protobuf:"varint,2,opt,name=biz_id,proto3" json:"biz_id,omitempty"` // 业务ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationRequest) Reset() {
	*x = GetLocationRequest{}
	mi := &file_location_seat_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationRequest) ProtoMessage() {}

func (x *GetLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationRequest.ProtoReflect.Descriptor instead.
func (*GetLocationRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetLocationRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GetLocationRequest) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type GetLocationBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Location      *LocationInfo          `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationBody) Reset() {
	*x = GetLocationBody{}
	mi := &file_location_seat_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationBody) ProtoMessage() {}

func (x *GetLocationBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationBody.ProtoReflect.Descriptor instead.
func (*GetLocationBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetLocationBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GetLocationBody) GetLocation() *LocationInfo {
	if x != nil {
		return x.Location
	}
	return nil
}

type GetLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *GetLocationBody       `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationResponse) Reset() {
	*x = GetLocationResponse{}
	mi := &file_location_seat_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationResponse) ProtoMessage() {}

func (x *GetLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationResponse.ProtoReflect.Descriptor instead.
func (*GetLocationResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetLocationResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetLocationResponse) GetBody() *GetLocationBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetLocationListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	CondList      []string               `protobuf:"bytes,4,rep,name=cond_list,proto3" json:"cond_list,omitempty"`
	Sorts         string                 `protobuf:"bytes,5,opt,name=sorts,proto3" json:"sorts,omitempty"`
	Orders        string                 `protobuf:"bytes,6,opt,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationListRequest) Reset() {
	*x = GetLocationListRequest{}
	mi := &file_location_seat_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationListRequest) ProtoMessage() {}

func (x *GetLocationListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationListRequest.ProtoReflect.Descriptor instead.
func (*GetLocationListRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetLocationListRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GetLocationListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetLocationListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetLocationListRequest) GetCondList() []string {
	if x != nil {
		return x.CondList
	}
	return nil
}

func (x *GetLocationListRequest) GetSorts() string {
	if x != nil {
		return x.Sorts
	}
	return ""
}

func (x *GetLocationListRequest) GetOrders() string {
	if x != nil {
		return x.Orders
	}
	return ""
}

type GetLocationListBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Locations     []*LocationInfo        `protobuf:"bytes,3,rep,name=locations,proto3" json:"locations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationListBody) Reset() {
	*x = GetLocationListBody{}
	mi := &file_location_seat_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationListBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationListBody) ProtoMessage() {}

func (x *GetLocationListBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationListBody.ProtoReflect.Descriptor instead.
func (*GetLocationListBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetLocationListBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GetLocationListBody) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetLocationListBody) GetLocations() []*LocationInfo {
	if x != nil {
		return x.Locations
	}
	return nil
}

type GetLocationListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *GetLocationListBody   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationListResponse) Reset() {
	*x = GetLocationListResponse{}
	mi := &file_location_seat_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationListResponse) ProtoMessage() {}

func (x *GetLocationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationListResponse.ProtoReflect.Descriptor instead.
func (*GetLocationListResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetLocationListResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetLocationListResponse) GetBody() *GetLocationListBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type AddSeatRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	FlowId              string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                   // 座位名称
	LocationId          int32                  `protobuf:"varint,3,opt,name=location_id,proto3" json:"location_id,omitempty"`                    // location id
	LocationBizId       int32                  `protobuf:"varint,4,opt,name=location_biz_id,proto3" json:"location_biz_id,omitempty"`            // 门店的业务ID
	Type                int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`                                  // 座位类型
	LocalInstanceMac    string                 `protobuf:"bytes,6,opt,name=local_instance_mac,proto3" json:"local_instance_mac,omitempty"`       // 本地实例ID
	LocalIp             string                 `protobuf:"bytes,7,opt,name=local_ip,proto3" json:"local_ip,omitempty"`                           // 本地IP
	LocalBootType       int32                  `protobuf:"varint,8,opt,name=local_boot_type,proto3" json:"local_boot_type,omitempty"`            // 本地启动类型
	LocalSchemeId       int32                  `protobuf:"varint,9,opt,name=local_scheme_id,proto3" json:"local_scheme_id,omitempty"`            // 本地方案ID
	StreamIp            string                 `protobuf:"bytes,10,opt,name=stream_ip,proto3" json:"stream_ip,omitempty"`                        // 流媒体IP
	StreamSchemeId      int32                  `protobuf:"varint,11,opt,name=stream_scheme_id,proto3" json:"stream_scheme_id,omitempty"`         // 流媒体方案ID
	StreamSpecification int32                  `protobuf:"varint,12,opt,name=stream_specification,proto3" json:"stream_specification,omitempty"` // 流媒体规格
	StreamInstanceMac   string                 `protobuf:"bytes,13,opt,name=stream_instance_mac,proto3" json:"stream_instance_mac,omitempty"`    // 流媒体实例ID
	ManagerState        int32                  `protobuf:"varint,14,opt,name=manager_state,proto3" json:"manager_state,omitempty"`               // 管理状态
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AddSeatRequest) Reset() {
	*x = AddSeatRequest{}
	mi := &file_location_seat_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSeatRequest) ProtoMessage() {}

func (x *AddSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSeatRequest.ProtoReflect.Descriptor instead.
func (*AddSeatRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{16}
}

func (x *AddSeatRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *AddSeatRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddSeatRequest) GetLocationId() int32 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *AddSeatRequest) GetLocationBizId() int32 {
	if x != nil {
		return x.LocationBizId
	}
	return 0
}

func (x *AddSeatRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddSeatRequest) GetLocalInstanceMac() string {
	if x != nil {
		return x.LocalInstanceMac
	}
	return ""
}

func (x *AddSeatRequest) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *AddSeatRequest) GetLocalBootType() int32 {
	if x != nil {
		return x.LocalBootType
	}
	return 0
}

func (x *AddSeatRequest) GetLocalSchemeId() int32 {
	if x != nil {
		return x.LocalSchemeId
	}
	return 0
}

func (x *AddSeatRequest) GetStreamIp() string {
	if x != nil {
		return x.StreamIp
	}
	return ""
}

func (x *AddSeatRequest) GetStreamSchemeId() int32 {
	if x != nil {
		return x.StreamSchemeId
	}
	return 0
}

func (x *AddSeatRequest) GetStreamSpecification() int32 {
	if x != nil {
		return x.StreamSpecification
	}
	return 0
}

func (x *AddSeatRequest) GetStreamInstanceMac() string {
	if x != nil {
		return x.StreamInstanceMac
	}
	return ""
}

func (x *AddSeatRequest) GetManagerState() int32 {
	if x != nil {
		return x.ManagerState
	}
	return 0
}

type AddSeatBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`    // 座位ID
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"` // 座位名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSeatBody) Reset() {
	*x = AddSeatBody{}
	mi := &file_location_seat_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSeatBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSeatBody) ProtoMessage() {}

func (x *AddSeatBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSeatBody.ProtoReflect.Descriptor instead.
func (*AddSeatBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{17}
}

func (x *AddSeatBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *AddSeatBody) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddSeatBody) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddSeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *AddSeatBody           `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSeatResponse) Reset() {
	*x = AddSeatResponse{}
	mi := &file_location_seat_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSeatResponse) ProtoMessage() {}

func (x *AddSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSeatResponse.ProtoReflect.Descriptor instead.
func (*AddSeatResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{18}
}

func (x *AddSeatResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *AddSeatResponse) GetBody() *AddSeatBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type DeleteSeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"` // 座位ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSeatRequest) Reset() {
	*x = DeleteSeatRequest{}
	mi := &file_location_seat_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeatRequest) ProtoMessage() {}

func (x *DeleteSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeatRequest.ProtoReflect.Descriptor instead.
func (*DeleteSeatRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteSeatRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *DeleteSeatRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSeatBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSeatBody) Reset() {
	*x = DeleteSeatBody{}
	mi := &file_location_seat_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSeatBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeatBody) ProtoMessage() {}

func (x *DeleteSeatBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeatBody.ProtoReflect.Descriptor instead.
func (*DeleteSeatBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteSeatBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type DeleteSeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *DeleteSeatBody        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSeatResponse) Reset() {
	*x = DeleteSeatResponse{}
	mi := &file_location_seat_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeatResponse) ProtoMessage() {}

func (x *DeleteSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeatResponse.ProtoReflect.Descriptor instead.
func (*DeleteSeatResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteSeatResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *DeleteSeatResponse) GetBody() *DeleteSeatBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type UpdateSeatRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	FlowId              string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Id                  int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                      // 座位ID
	Name                string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                   // 座位名称；所有字段 不更新则不填，更新为空则填写特殊值
	LocationId          int32                  `protobuf:"varint,4,opt,name=location_id,proto3" json:"location_id,omitempty"`                    // location id
	LocationBizId       int32                  `protobuf:"varint,5,opt,name=location_biz_id,proto3" json:"location_biz_id,omitempty"`            // 门店的业务ID
	Type                int32                  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                                  // 座位类型
	LocalInstanceMac    string                 `protobuf:"bytes,7,opt,name=local_instance_mac,proto3" json:"local_instance_mac,omitempty"`       // 本地实例ID
	LocalIp             string                 `protobuf:"bytes,8,opt,name=local_ip,proto3" json:"local_ip,omitempty"`                           // 本地IP
	LocalBootType       int32                  `protobuf:"varint,9,opt,name=local_boot_type,proto3" json:"local_boot_type,omitempty"`            // 本地启动类型
	LocalSchemeId       int32                  `protobuf:"varint,10,opt,name=local_scheme_id,proto3" json:"local_scheme_id,omitempty"`           // 本地方案ID
	StreamIp            string                 `protobuf:"bytes,11,opt,name=stream_ip,proto3" json:"stream_ip,omitempty"`                        // 流媒体IP
	StreamSchemeId      int32                  `protobuf:"varint,12,opt,name=stream_scheme_id,proto3" json:"stream_scheme_id,omitempty"`         // 流媒体方案ID
	StreamSpecification int32                  `protobuf:"varint,13,opt,name=stream_specification,proto3" json:"stream_specification,omitempty"` // 流媒体规格
	StreamInstanceMac   string                 `protobuf:"bytes,14,opt,name=stream_instance_mac,proto3" json:"stream_instance_mac,omitempty"`    // 流媒体实例ID
	ManagerState        int32                  `protobuf:"varint,15,opt,name=manager_state,proto3" json:"manager_state,omitempty"`               // 管理状态
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UpdateSeatRequest) Reset() {
	*x = UpdateSeatRequest{}
	mi := &file_location_seat_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeatRequest) ProtoMessage() {}

func (x *UpdateSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeatRequest.ProtoReflect.Descriptor instead.
func (*UpdateSeatRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateSeatRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *UpdateSeatRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSeatRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSeatRequest) GetLocationId() int32 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *UpdateSeatRequest) GetLocationBizId() int32 {
	if x != nil {
		return x.LocationBizId
	}
	return 0
}

func (x *UpdateSeatRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateSeatRequest) GetLocalInstanceMac() string {
	if x != nil {
		return x.LocalInstanceMac
	}
	return ""
}

func (x *UpdateSeatRequest) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *UpdateSeatRequest) GetLocalBootType() int32 {
	if x != nil {
		return x.LocalBootType
	}
	return 0
}

func (x *UpdateSeatRequest) GetLocalSchemeId() int32 {
	if x != nil {
		return x.LocalSchemeId
	}
	return 0
}

func (x *UpdateSeatRequest) GetStreamIp() string {
	if x != nil {
		return x.StreamIp
	}
	return ""
}

func (x *UpdateSeatRequest) GetStreamSchemeId() int32 {
	if x != nil {
		return x.StreamSchemeId
	}
	return 0
}

func (x *UpdateSeatRequest) GetStreamSpecification() int32 {
	if x != nil {
		return x.StreamSpecification
	}
	return 0
}

func (x *UpdateSeatRequest) GetStreamInstanceMac() string {
	if x != nil {
		return x.StreamInstanceMac
	}
	return ""
}

func (x *UpdateSeatRequest) GetManagerState() int32 {
	if x != nil {
		return x.ManagerState
	}
	return 0
}

type UpdateSeatBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSeatBody) Reset() {
	*x = UpdateSeatBody{}
	mi := &file_location_seat_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSeatBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeatBody) ProtoMessage() {}

func (x *UpdateSeatBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeatBody.ProtoReflect.Descriptor instead.
func (*UpdateSeatBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateSeatBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type UpdateSeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *UpdateSeatBody        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSeatResponse) Reset() {
	*x = UpdateSeatResponse{}
	mi := &file_location_seat_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeatResponse) ProtoMessage() {}

func (x *UpdateSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeatResponse.ProtoReflect.Descriptor instead.
func (*UpdateSeatResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateSeatResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *UpdateSeatResponse) GetBody() *UpdateSeatBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type SeatInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      // 座位ID
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                   // 座位名称
	LocationId          int32                  `protobuf:"varint,3,opt,name=location_id,proto3" json:"location_id,omitempty"`                    // location id
	LocationBizId       int32                  `protobuf:"varint,4,opt,name=location_biz_id,proto3" json:"location_biz_id,omitempty"`            // 门店的业务ID
	Type                int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`                                  // 座位类型
	LocalInstanceId     int32                  `protobuf:"varint,6,opt,name=local_instance_id,proto3" json:"local_instance_id,omitempty"`        // 本地实例ID
	LocalInstanceMac    string                 `protobuf:"bytes,7,opt,name=local_instance_mac,proto3" json:"local_instance_mac,omitempty"`       // 本地实例ID
	LocalIp             string                 `protobuf:"bytes,8,opt,name=local_ip,proto3" json:"local_ip,omitempty"`                           // 本地IP
	LocalSchemeId       int32                  `protobuf:"varint,9,opt,name=local_scheme_id,proto3" json:"local_scheme_id,omitempty"`            // 本地方案ID
	StreamIp            string                 `protobuf:"bytes,10,opt,name=stream_ip,proto3" json:"stream_ip,omitempty"`                        // 流媒体IP
	StreamSchemeId      int32                  `protobuf:"varint,11,opt,name=stream_scheme_id,proto3" json:"stream_scheme_id,omitempty"`         // 流媒体方案ID
	StreamSpecification int32                  `protobuf:"varint,12,opt,name=stream_specification,proto3" json:"stream_specification,omitempty"` // 流媒体规格
	StreamInstanceId    int32                  `protobuf:"varint,13,opt,name=stream_instance_id,proto3" json:"stream_instance_id,omitempty"`     // 流媒体实例ID
	StreamInstanceMac   string                 `protobuf:"bytes,14,opt,name=stream_instance_mac,proto3" json:"stream_instance_mac,omitempty"`    // 流媒体实例ID
	ManagerState        int32                  `protobuf:"varint,15,opt,name=manager_state,proto3" json:"manager_state,omitempty"`               // 管理状态
	State               int32                  `protobuf:"varint,16,opt,name=state,proto3" json:"state,omitempty"`                               // 座位状态
	CreateTime          string                 `protobuf:"bytes,17,opt,name=create_time,proto3" json:"create_time,omitempty"`                    // 创建时间
	UpdateTime          string                 `protobuf:"bytes,18,opt,name=update_time,proto3" json:"update_time,omitempty"`                    // 用户最后更新时间
	ModifyTime          string                 `protobuf:"bytes,19,opt,name=modify_time,proto3" json:"modify_time,omitempty"`                    // db最后更新时间
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SeatInfo) Reset() {
	*x = SeatInfo{}
	mi := &file_location_seat_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatInfo) ProtoMessage() {}

func (x *SeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatInfo.ProtoReflect.Descriptor instead.
func (*SeatInfo) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{25}
}

func (x *SeatInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeatInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeatInfo) GetLocationId() int32 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *SeatInfo) GetLocationBizId() int32 {
	if x != nil {
		return x.LocationBizId
	}
	return 0
}

func (x *SeatInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SeatInfo) GetLocalInstanceId() int32 {
	if x != nil {
		return x.LocalInstanceId
	}
	return 0
}

func (x *SeatInfo) GetLocalInstanceMac() string {
	if x != nil {
		return x.LocalInstanceMac
	}
	return ""
}

func (x *SeatInfo) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *SeatInfo) GetLocalSchemeId() int32 {
	if x != nil {
		return x.LocalSchemeId
	}
	return 0
}

func (x *SeatInfo) GetStreamIp() string {
	if x != nil {
		return x.StreamIp
	}
	return ""
}

func (x *SeatInfo) GetStreamSchemeId() int32 {
	if x != nil {
		return x.StreamSchemeId
	}
	return 0
}

func (x *SeatInfo) GetStreamSpecification() int32 {
	if x != nil {
		return x.StreamSpecification
	}
	return 0
}

func (x *SeatInfo) GetStreamInstanceId() int32 {
	if x != nil {
		return x.StreamInstanceId
	}
	return 0
}

func (x *SeatInfo) GetStreamInstanceMac() string {
	if x != nil {
		return x.StreamInstanceMac
	}
	return ""
}

func (x *SeatInfo) GetManagerState() int32 {
	if x != nil {
		return x.ManagerState
	}
	return 0
}

func (x *SeatInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SeatInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SeatInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *SeatInfo) GetModifyTime() string {
	if x != nil {
		return x.ModifyTime
	}
	return ""
}

type GetSeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"` // 座位ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeatRequest) Reset() {
	*x = GetSeatRequest{}
	mi := &file_location_seat_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatRequest) ProtoMessage() {}

func (x *GetSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatRequest.ProtoReflect.Descriptor instead.
func (*GetSeatRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetSeatRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GetSeatRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSeatBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Seat          *SeatInfo              `protobuf:"bytes,2,opt,name=seat,proto3" json:"seat,omitempty"` // 座位信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeatBody) Reset() {
	*x = GetSeatBody{}
	mi := &file_location_seat_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeatBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatBody) ProtoMessage() {}

func (x *GetSeatBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatBody.ProtoReflect.Descriptor instead.
func (*GetSeatBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetSeatBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GetSeatBody) GetSeat() *SeatInfo {
	if x != nil {
		return x.Seat
	}
	return nil
}

type GetSeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *GetSeatBody           `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeatResponse) Reset() {
	*x = GetSeatResponse{}
	mi := &file_location_seat_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatResponse) ProtoMessage() {}

func (x *GetSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatResponse.ProtoReflect.Descriptor instead.
func (*GetSeatResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetSeatResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetSeatResponse) GetBody() *GetSeatBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetSeatListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	CondList      []string               `protobuf:"bytes,4,rep,name=cond_list,proto3" json:"cond_list,omitempty"`
	Sorts         string                 `protobuf:"bytes,5,opt,name=sorts,proto3" json:"sorts,omitempty"`
	Orders        string                 `protobuf:"bytes,6,opt,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeatListRequest) Reset() {
	*x = GetSeatListRequest{}
	mi := &file_location_seat_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeatListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatListRequest) ProtoMessage() {}

func (x *GetSeatListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatListRequest.ProtoReflect.Descriptor instead.
func (*GetSeatListRequest) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetSeatListRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GetSeatListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSeatListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSeatListRequest) GetCondList() []string {
	if x != nil {
		return x.CondList
	}
	return nil
}

func (x *GetSeatListRequest) GetSorts() string {
	if x != nil {
		return x.Sorts
	}
	return ""
}

func (x *GetSeatListRequest) GetOrders() string {
	if x != nil {
		return x.Orders
	}
	return ""
}

type GetSeatListBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,proto3" json:"flow_id,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Seats         []*SeatInfo            `protobuf:"bytes,3,rep,name=seats,proto3" json:"seats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeatListBody) Reset() {
	*x = GetSeatListBody{}
	mi := &file_location_seat_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeatListBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatListBody) ProtoMessage() {}

func (x *GetSeatListBody) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatListBody.ProtoReflect.Descriptor instead.
func (*GetSeatListBody) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetSeatListBody) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GetSeatListBody) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSeatListBody) GetSeats() []*SeatInfo {
	if x != nil {
		return x.Seats
	}
	return nil
}

type GetSeatListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *common.RspInfo        `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *GetSeatListBody       `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSeatListResponse) Reset() {
	*x = GetSeatListResponse{}
	mi := &file_location_seat_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSeatListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatListResponse) ProtoMessage() {}

func (x *GetSeatListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_location_seat_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatListResponse.ProtoReflect.Descriptor instead.
func (*GetSeatListResponse) Descriptor() ([]byte, []int) {
	return file_location_seat_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetSeatListResponse) GetRet() *common.RspInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetSeatListResponse) GetBody() *GetSeatListBody {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_location_seat_service_proto protoreflect.FileDescriptor

const file_location_seat_service_proto_rawDesc = "" +
	"\n" +
	"\x1blocation_seat_service.proto\x12\x15location_seat_service\x1a\x1cgoogle/api/annotations.proto\x1a\x13common/common.proto\x1a\x1bgoogle/protobuf/empty.proto\"\x96\x02\n" +
	"\x12AddLocationRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x16\n" +
	"\x06biz_id\x18\x02 \x01(\x05R\x06biz_id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12&\n" +
	"\x0eseat_num_limit\x18\x04 \x01(\x05R\x0eseat_num_limit\x12 \n" +
	"\vbox_vlan_id\x18\x05 \x01(\x05R\vbox_vlan_id\x12\x1e\n" +
	"\n" +
	"pc_vlan_id\x18\x06 \x01(\x05R\n" +
	"pc_vlan_id\x12*\n" +
	"\x10instance_vlan_id\x18\a \x01(\x05R\x10instance_vlan_id\x12$\n" +
	"\rmanager_state\x18\b \x01(\x05R\rmanager_state\"g\n" +
	"\x0fAddLocationBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\x12\x16\n" +
	"\x06biz_id\x18\x03 \x01(\x05R\x06biz_id\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"t\n" +
	"\x13AddLocationResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x12:\n" +
	"\x04body\x18\x02 \x01(\v2&.location_seat_service.AddLocationBodyR\x04body\"I\n" +
	"\x15DeleteLocationRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x16\n" +
	"\x06biz_id\x18\x02 \x01(\x05R\x06biz_id\".\n" +
	"\x12DeleteLocationBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\"z\n" +
	"\x16DeleteLocationResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x12=\n" +
	"\x04body\x18\x02 \x01(\v2).location_seat_service.DeleteLocationBodyR\x04body\"\x99\x02\n" +
	"\x15UpdateLocationRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x16\n" +
	"\x06biz_id\x18\x02 \x01(\x05R\x06biz_id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12&\n" +
	"\x0eseat_num_limit\x18\x04 \x01(\x05R\x0eseat_num_limit\x12 \n" +
	"\vbox_vlan_id\x18\x05 \x01(\x05R\vbox_vlan_id\x12\x1e\n" +
	"\n" +
	"pc_vlan_id\x18\x06 \x01(\x05R\n" +
	"pc_vlan_id\x12*\n" +
	"\x10instance_vlan_id\x18\a \x01(\x05R\x10instance_vlan_id\x12$\n" +
	"\rmanager_state\x18\b \x01(\x05R\rmanager_state\".\n" +
	"\x12UpdateLocationBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\"z\n" +
	"\x16UpdateLocationResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x12=\n" +
	"\x04body\x18\x02 \x01(\v2).location_seat_service.UpdateLocationBodyR\x04body\"\xec\x02\n" +
	"\fLocationInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x16\n" +
	"\x06biz_id\x18\x02 \x01(\x05R\x06biz_id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12&\n" +
	"\x0eseat_num_limit\x18\x04 \x01(\x05R\x0eseat_num_limit\x12 \n" +
	"\vbox_vlan_id\x18\x05 \x01(\x05R\vbox_vlan_id\x12\x1e\n" +
	"\n" +
	"pc_vlan_id\x18\x06 \x01(\x05R\n" +
	"pc_vlan_id\x12*\n" +
	"\x10instance_vlan_id\x18\a \x01(\x05R\x10instance_vlan_id\x12$\n" +
	"\rmanager_state\x18\b \x01(\x05R\rmanager_state\x12 \n" +
	"\vcreate_time\x18\t \x01(\tR\vcreate_time\x12 \n" +
	"\vupdate_time\x18\n" +
	" \x01(\tR\vupdate_time\x12 \n" +
	"\vmodify_time\x18\v \x01(\tR\vmodify_time\"F\n" +
	"\x12GetLocationRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x16\n" +
	"\x06biz_id\x18\x02 \x01(\x05R\x06biz_id\"l\n" +
	"\x0fGetLocationBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12?\n" +
	"\blocation\x18\x02 \x01(\v2#.location_seat_service.LocationInfoR\blocation\"t\n" +
	"\x13GetLocationResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x12:\n" +
	"\x04body\x18\x02 \x01(\v2&.location_seat_service.GetLocationBodyR\x04body\"\xac\x01\n" +
	"\x16GetLocationListRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1c\n" +
	"\tcond_list\x18\x04 \x03(\tR\tcond_list\x12\x14\n" +
	"\x05sorts\x18\x05 \x01(\tR\x05sorts\x12\x16\n" +
	"\x06orders\x18\x06 \x01(\tR\x06orders\"\x88\x01\n" +
	"\x13GetLocationListBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12A\n" +
	"\tlocations\x18\x03 \x03(\v2#.location_seat_service.LocationInfoR\tlocations\"|\n" +
	"\x17GetLocationListResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x12>\n" +
	"\x04body\x18\x02 \x01(\v2*.location_seat_service.GetLocationListBodyR\x04body\"\x94\x04\n" +
	"\x0eAddSeatRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vlocation_id\x18\x03 \x01(\x05R\vlocation_id\x12(\n" +
	"\x0flocation_biz_id\x18\x04 \x01(\x05R\x0flocation_biz_id\x12\x12\n" +
	"\x04type\x18\x05 \x01(\x05R\x04type\x12.\n" +
	"\x12local_instance_mac\x18\x06 \x01(\tR\x12local_instance_mac\x12\x1a\n" +
	"\blocal_ip\x18\a \x01(\tR\blocal_ip\x12(\n" +
	"\x0flocal_boot_type\x18\b \x01(\x05R\x0flocal_boot_type\x12(\n" +
	"\x0flocal_scheme_id\x18\t \x01(\x05R\x0flocal_scheme_id\x12\x1c\n" +
	"\tstream_ip\x18\n" +
	" \x01(\tR\tstream_ip\x12*\n" +
	"\x10stream_scheme_id\x18\v \x01(\x05R\x10stream_scheme_id\x122\n" +
	"\x14stream_specification\x18\f \x01(\x05R\x14stream_specification\x120\n" +
	"\x13stream_instance_mac\x18\r \x01(\tR\x13stream_instance_mac\x12$\n" +
	"\rmanager_state\x18\x0e \x01(\x05R\rmanager_state\"K\n" +
	"\vAddSeatBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"l\n" +
	"\x0fAddSeatResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x126\n" +
	"\x04body\x18\x02 \x01(\v2\".location_seat_service.AddSeatBodyR\x04body\"=\n" +
	"\x11DeleteSeatRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\"*\n" +
	"\x0eDeleteSeatBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\"r\n" +
	"\x12DeleteSeatResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x129\n" +
	"\x04body\x18\x02 \x01(\v2%.location_seat_service.DeleteSeatBodyR\x04body\"\xa7\x04\n" +
	"\x11UpdateSeatRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vlocation_id\x18\x04 \x01(\x05R\vlocation_id\x12(\n" +
	"\x0flocation_biz_id\x18\x05 \x01(\x05R\x0flocation_biz_id\x12\x12\n" +
	"\x04type\x18\x06 \x01(\x05R\x04type\x12.\n" +
	"\x12local_instance_mac\x18\a \x01(\tR\x12local_instance_mac\x12\x1a\n" +
	"\blocal_ip\x18\b \x01(\tR\blocal_ip\x12(\n" +
	"\x0flocal_boot_type\x18\t \x01(\x05R\x0flocal_boot_type\x12(\n" +
	"\x0flocal_scheme_id\x18\n" +
	" \x01(\x05R\x0flocal_scheme_id\x12\x1c\n" +
	"\tstream_ip\x18\v \x01(\tR\tstream_ip\x12*\n" +
	"\x10stream_scheme_id\x18\f \x01(\x05R\x10stream_scheme_id\x122\n" +
	"\x14stream_specification\x18\r \x01(\x05R\x14stream_specification\x120\n" +
	"\x13stream_instance_mac\x18\x0e \x01(\tR\x13stream_instance_mac\x12$\n" +
	"\rmanager_state\x18\x0f \x01(\x05R\rmanager_state\"*\n" +
	"\x0eUpdateSeatBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\"r\n" +
	"\x12UpdateSeatResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x129\n" +
	"\x04body\x18\x02 \x01(\v2%.location_seat_service.UpdateSeatBodyR\x04body\"\xb4\x05\n" +
	"\bSeatInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vlocation_id\x18\x03 \x01(\x05R\vlocation_id\x12(\n" +
	"\x0flocation_biz_id\x18\x04 \x01(\x05R\x0flocation_biz_id\x12\x12\n" +
	"\x04type\x18\x05 \x01(\x05R\x04type\x12,\n" +
	"\x11local_instance_id\x18\x06 \x01(\x05R\x11local_instance_id\x12.\n" +
	"\x12local_instance_mac\x18\a \x01(\tR\x12local_instance_mac\x12\x1a\n" +
	"\blocal_ip\x18\b \x01(\tR\blocal_ip\x12(\n" +
	"\x0flocal_scheme_id\x18\t \x01(\x05R\x0flocal_scheme_id\x12\x1c\n" +
	"\tstream_ip\x18\n" +
	" \x01(\tR\tstream_ip\x12*\n" +
	"\x10stream_scheme_id\x18\v \x01(\x05R\x10stream_scheme_id\x122\n" +
	"\x14stream_specification\x18\f \x01(\x05R\x14stream_specification\x12.\n" +
	"\x12stream_instance_id\x18\r \x01(\x05R\x12stream_instance_id\x120\n" +
	"\x13stream_instance_mac\x18\x0e \x01(\tR\x13stream_instance_mac\x12$\n" +
	"\rmanager_state\x18\x0f \x01(\x05R\rmanager_state\x12\x14\n" +
	"\x05state\x18\x10 \x01(\x05R\x05state\x12 \n" +
	"\vcreate_time\x18\x11 \x01(\tR\vcreate_time\x12 \n" +
	"\vupdate_time\x18\x12 \x01(\tR\vupdate_time\x12 \n" +
	"\vmodify_time\x18\x13 \x01(\tR\vmodify_time\":\n" +
	"\x0eGetSeatRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\"\\\n" +
	"\vGetSeatBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x123\n" +
	"\x04seat\x18\x02 \x01(\v2\x1f.location_seat_service.SeatInfoR\x04seat\"l\n" +
	"\x0fGetSeatResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x126\n" +
	"\x04body\x18\x02 \x01(\v2\".location_seat_service.GetSeatBodyR\x04body\"\xa8\x01\n" +
	"\x12GetSeatListRequest\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1c\n" +
	"\tcond_list\x18\x04 \x03(\tR\tcond_list\x12\x14\n" +
	"\x05sorts\x18\x05 \x01(\tR\x05sorts\x12\x16\n" +
	"\x06orders\x18\x06 \x01(\tR\x06orders\"x\n" +
	"\x0fGetSeatListBody\x12\x18\n" +
	"\aflow_id\x18\x01 \x01(\tR\aflow_id\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x125\n" +
	"\x05seats\x18\x03 \x03(\v2\x1f.location_seat_service.SeatInfoR\x05seats\"t\n" +
	"\x13GetSeatListResponse\x12!\n" +
	"\x03ret\x18\x01 \x01(\v2\x0f.common.RspInfoR\x03ret\x12:\n" +
	"\x04body\x18\x02 \x01(\v2&.location_seat_service.GetSeatListBodyR\x04body*l\n" +
	"\x14LocationManagerState\x12\x13\n" +
	"\x0fLocationUnknown\x10\x00\x12\x1e\n" +
	"\x1aLocationManagerStateEnable\x10\x01\x12\x1f\n" +
	"\x1bLocationManagerStateDisable\x10\x02*h\n" +
	"\x10SeatManagerState\x12\x1b\n" +
	"\x17SeatManagerStateUnknown\x10\x00\x12\x1a\n" +
	"\x16SeatManagerStateEnable\x10\x01\x12\x1b\n" +
	"\x17SeatManagerStateDisable\x10\x02*a\n" +
	"\bSeatType\x12\x1b\n" +
	"\x17SeatTypeDisklessUnknown\x10\x00\x12\x1c\n" +
	"\x18SeatTypeDisklessComputer\x10\x01\x12\x1a\n" +
	"\x16SeatTypeBoxStreamCloud\x10\x02*Q\n" +
	"\bBootType\x12\x12\n" +
	"\x0eBOOTTYPE_KNOWN\x10\x00\x12\x12\n" +
	"\x0eBOOTTYPE_LOCAL\x10\x02\x12\x1d\n" +
	"\x19BOOTTYPE_DISKLESS_UPGRADE\x10\x042\xef\v\n" +
	"\x13LocationSeatService\x12\x94\x01\n" +
	"\vAddLocation\x12).location_seat_service.AddLocationRequest\x1a*.location_seat_service.AddLocationResponse\".\x82\xd3\xe4\x93\x02(:\x01*\"#/v1/LocationSeatService/AddLocation\x12\xa0\x01\n" +
	"\x0eDeleteLocation\x12,.location_seat_service.DeleteLocationRequest\x1a-.location_seat_service.DeleteLocationResponse\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/v1/LocationSeatService/DeleteLocation\x12\xa0\x01\n" +
	"\x0eUpdateLocation\x12,.location_seat_service.UpdateLocationRequest\x1a-.location_seat_service.UpdateLocationResponse\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/v1/LocationSeatService/UpdateLocation\x12\x91\x01\n" +
	"\vGetLocation\x12).location_seat_service.GetLocationRequest\x1a*.location_seat_service.GetLocationResponse\"+\x82\xd3\xe4\x93\x02%\x12#/v1/LocationSeatService/GetLocation\x12\xa1\x01\n" +
	"\x0fGetLocationList\x12-.location_seat_service.GetLocationListRequest\x1a..location_seat_service.GetLocationListResponse\"/\x82\xd3\xe4\x93\x02)\x12'/v1/LocationSeatService/GetLocationList\x12\x84\x01\n" +
	"\aAddSeat\x12%.location_seat_service.AddSeatRequest\x1a&.location_seat_service.AddSeatResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/v1/LocationSeatService/AddSeat\x12\x90\x01\n" +
	"\n" +
	"DeleteSeat\x12(.location_seat_service.DeleteSeatRequest\x1a).location_seat_service.DeleteSeatResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/LocationSeatService/DeleteSeat\x12\x90\x01\n" +
	"\n" +
	"UpdateSeat\x12(.location_seat_service.UpdateSeatRequest\x1a).location_seat_service.UpdateSeatResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/LocationSeatService/UpdateSeat\x12\x81\x01\n" +
	"\aGetSeat\x12%.location_seat_service.GetSeatRequest\x1a&.location_seat_service.GetSeatResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/v1/LocationSeatService/GetSeat\x12\x91\x01\n" +
	"\vGetSeatList\x12).location_seat_service.GetSeatListRequest\x1a*.location_seat_service.GetSeatListResponse\"+\x82\xd3\xe4\x93\x02%\x12#/v1/LocationSeatService/GetSeatListBOZMgitlab.vrviu.com/diskless_stack/diskless_stack/protocol/location_seat_serviceb\x06proto3"

var (
	file_location_seat_service_proto_rawDescOnce sync.Once
	file_location_seat_service_proto_rawDescData []byte
)

func file_location_seat_service_proto_rawDescGZIP() []byte {
	file_location_seat_service_proto_rawDescOnce.Do(func() {
		file_location_seat_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_location_seat_service_proto_rawDesc), len(file_location_seat_service_proto_rawDesc)))
	})
	return file_location_seat_service_proto_rawDescData
}

var file_location_seat_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_location_seat_service_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_location_seat_service_proto_goTypes = []any{
	(LocationManagerState)(0),       // 0: location_seat_service.LocationManagerState
	(SeatManagerState)(0),           // 1: location_seat_service.SeatManagerState
	(SeatType)(0),                   // 2: location_seat_service.SeatType
	(BootType)(0),                   // 3: location_seat_service.BootType
	(*AddLocationRequest)(nil),      // 4: location_seat_service.AddLocationRequest
	(*AddLocationBody)(nil),         // 5: location_seat_service.AddLocationBody
	(*AddLocationResponse)(nil),     // 6: location_seat_service.AddLocationResponse
	(*DeleteLocationRequest)(nil),   // 7: location_seat_service.DeleteLocationRequest
	(*DeleteLocationBody)(nil),      // 8: location_seat_service.DeleteLocationBody
	(*DeleteLocationResponse)(nil),  // 9: location_seat_service.DeleteLocationResponse
	(*UpdateLocationRequest)(nil),   // 10: location_seat_service.UpdateLocationRequest
	(*UpdateLocationBody)(nil),      // 11: location_seat_service.UpdateLocationBody
	(*UpdateLocationResponse)(nil),  // 12: location_seat_service.UpdateLocationResponse
	(*LocationInfo)(nil),            // 13: location_seat_service.LocationInfo
	(*GetLocationRequest)(nil),      // 14: location_seat_service.GetLocationRequest
	(*GetLocationBody)(nil),         // 15: location_seat_service.GetLocationBody
	(*GetLocationResponse)(nil),     // 16: location_seat_service.GetLocationResponse
	(*GetLocationListRequest)(nil),  // 17: location_seat_service.GetLocationListRequest
	(*GetLocationListBody)(nil),     // 18: location_seat_service.GetLocationListBody
	(*GetLocationListResponse)(nil), // 19: location_seat_service.GetLocationListResponse
	(*AddSeatRequest)(nil),          // 20: location_seat_service.AddSeatRequest
	(*AddSeatBody)(nil),             // 21: location_seat_service.AddSeatBody
	(*AddSeatResponse)(nil),         // 22: location_seat_service.AddSeatResponse
	(*DeleteSeatRequest)(nil),       // 23: location_seat_service.DeleteSeatRequest
	(*DeleteSeatBody)(nil),          // 24: location_seat_service.DeleteSeatBody
	(*DeleteSeatResponse)(nil),      // 25: location_seat_service.DeleteSeatResponse
	(*UpdateSeatRequest)(nil),       // 26: location_seat_service.UpdateSeatRequest
	(*UpdateSeatBody)(nil),          // 27: location_seat_service.UpdateSeatBody
	(*UpdateSeatResponse)(nil),      // 28: location_seat_service.UpdateSeatResponse
	(*SeatInfo)(nil),                // 29: location_seat_service.SeatInfo
	(*GetSeatRequest)(nil),          // 30: location_seat_service.GetSeatRequest
	(*GetSeatBody)(nil),             // 31: location_seat_service.GetSeatBody
	(*GetSeatResponse)(nil),         // 32: location_seat_service.GetSeatResponse
	(*GetSeatListRequest)(nil),      // 33: location_seat_service.GetSeatListRequest
	(*GetSeatListBody)(nil),         // 34: location_seat_service.GetSeatListBody
	(*GetSeatListResponse)(nil),     // 35: location_seat_service.GetSeatListResponse
	(*common.RspInfo)(nil),          // 36: common.RspInfo
}
var file_location_seat_service_proto_depIdxs = []int32{
	36, // 0: location_seat_service.AddLocationResponse.ret:type_name -> common.RspInfo
	5,  // 1: location_seat_service.AddLocationResponse.body:type_name -> location_seat_service.AddLocationBody
	36, // 2: location_seat_service.DeleteLocationResponse.ret:type_name -> common.RspInfo
	8,  // 3: location_seat_service.DeleteLocationResponse.body:type_name -> location_seat_service.DeleteLocationBody
	36, // 4: location_seat_service.UpdateLocationResponse.ret:type_name -> common.RspInfo
	11, // 5: location_seat_service.UpdateLocationResponse.body:type_name -> location_seat_service.UpdateLocationBody
	13, // 6: location_seat_service.GetLocationBody.location:type_name -> location_seat_service.LocationInfo
	36, // 7: location_seat_service.GetLocationResponse.ret:type_name -> common.RspInfo
	15, // 8: location_seat_service.GetLocationResponse.body:type_name -> location_seat_service.GetLocationBody
	13, // 9: location_seat_service.GetLocationListBody.locations:type_name -> location_seat_service.LocationInfo
	36, // 10: location_seat_service.GetLocationListResponse.ret:type_name -> common.RspInfo
	18, // 11: location_seat_service.GetLocationListResponse.body:type_name -> location_seat_service.GetLocationListBody
	36, // 12: location_seat_service.AddSeatResponse.ret:type_name -> common.RspInfo
	21, // 13: location_seat_service.AddSeatResponse.body:type_name -> location_seat_service.AddSeatBody
	36, // 14: location_seat_service.DeleteSeatResponse.ret:type_name -> common.RspInfo
	24, // 15: location_seat_service.DeleteSeatResponse.body:type_name -> location_seat_service.DeleteSeatBody
	36, // 16: location_seat_service.UpdateSeatResponse.ret:type_name -> common.RspInfo
	27, // 17: location_seat_service.UpdateSeatResponse.body:type_name -> location_seat_service.UpdateSeatBody
	29, // 18: location_seat_service.GetSeatBody.seat:type_name -> location_seat_service.SeatInfo
	36, // 19: location_seat_service.GetSeatResponse.ret:type_name -> common.RspInfo
	31, // 20: location_seat_service.GetSeatResponse.body:type_name -> location_seat_service.GetSeatBody
	29, // 21: location_seat_service.GetSeatListBody.seats:type_name -> location_seat_service.SeatInfo
	36, // 22: location_seat_service.GetSeatListResponse.ret:type_name -> common.RspInfo
	34, // 23: location_seat_service.GetSeatListResponse.body:type_name -> location_seat_service.GetSeatListBody
	4,  // 24: location_seat_service.LocationSeatService.AddLocation:input_type -> location_seat_service.AddLocationRequest
	7,  // 25: location_seat_service.LocationSeatService.DeleteLocation:input_type -> location_seat_service.DeleteLocationRequest
	10, // 26: location_seat_service.LocationSeatService.UpdateLocation:input_type -> location_seat_service.UpdateLocationRequest
	14, // 27: location_seat_service.LocationSeatService.GetLocation:input_type -> location_seat_service.GetLocationRequest
	17, // 28: location_seat_service.LocationSeatService.GetLocationList:input_type -> location_seat_service.GetLocationListRequest
	20, // 29: location_seat_service.LocationSeatService.AddSeat:input_type -> location_seat_service.AddSeatRequest
	23, // 30: location_seat_service.LocationSeatService.DeleteSeat:input_type -> location_seat_service.DeleteSeatRequest
	26, // 31: location_seat_service.LocationSeatService.UpdateSeat:input_type -> location_seat_service.UpdateSeatRequest
	30, // 32: location_seat_service.LocationSeatService.GetSeat:input_type -> location_seat_service.GetSeatRequest
	33, // 33: location_seat_service.LocationSeatService.GetSeatList:input_type -> location_seat_service.GetSeatListRequest
	6,  // 34: location_seat_service.LocationSeatService.AddLocation:output_type -> location_seat_service.AddLocationResponse
	9,  // 35: location_seat_service.LocationSeatService.DeleteLocation:output_type -> location_seat_service.DeleteLocationResponse
	12, // 36: location_seat_service.LocationSeatService.UpdateLocation:output_type -> location_seat_service.UpdateLocationResponse
	16, // 37: location_seat_service.LocationSeatService.GetLocation:output_type -> location_seat_service.GetLocationResponse
	19, // 38: location_seat_service.LocationSeatService.GetLocationList:output_type -> location_seat_service.GetLocationListResponse
	22, // 39: location_seat_service.LocationSeatService.AddSeat:output_type -> location_seat_service.AddSeatResponse
	25, // 40: location_seat_service.LocationSeatService.DeleteSeat:output_type -> location_seat_service.DeleteSeatResponse
	28, // 41: location_seat_service.LocationSeatService.UpdateSeat:output_type -> location_seat_service.UpdateSeatResponse
	32, // 42: location_seat_service.LocationSeatService.GetSeat:output_type -> location_seat_service.GetSeatResponse
	35, // 43: location_seat_service.LocationSeatService.GetSeatList:output_type -> location_seat_service.GetSeatListResponse
	34, // [34:44] is the sub-list for method output_type
	24, // [24:34] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_location_seat_service_proto_init() }
func file_location_seat_service_proto_init() {
	if File_location_seat_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_location_seat_service_proto_rawDesc), len(file_location_seat_service_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_location_seat_service_proto_goTypes,
		DependencyIndexes: file_location_seat_service_proto_depIdxs,
		EnumInfos:         file_location_seat_service_proto_enumTypes,
		MessageInfos:      file_location_seat_service_proto_msgTypes,
	}.Build()
	File_location_seat_service_proto = out.File
	file_location_seat_service_proto_goTypes = nil
	file_location_seat_service_proto_depIdxs = nil
}
