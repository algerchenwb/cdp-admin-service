// Code generated by MockGen. DO NOT EDIT.
// Source: authenticate.go

// Package httpwrap is a generated GoMock package.
package httpwrap

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSecretHelper is a mock of SecretHelper interface.
type MockSecretHelper struct {
	ctrl     *gomock.Controller
	recorder *MockSecretHelperMockRecorder
}

// MockSecretHelperMockRecorder is the mock recorder for MockSecretHelper.
type MockSecretHelperMockRecorder struct {
	mock *MockSecretHelper
}

// NewMockSecretHelper creates a new mock instance.
func NewMockSecretHelper(ctrl *gomock.Controller) *MockSecretHelper {
	mock := &MockSecretHelper{ctrl: ctrl}
	mock.recorder = &MockSecretHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretHelper) EXPECT() *MockSecretHelperMockRecorder {
	return m.recorder
}

// GetSecret mocks base method.
func (m *MockSecretHelper) GetSecret(arg0 *AuthPublicParam) (*PermInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", arg0)
	ret0, _ := ret[0].(*PermInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockSecretHelperMockRecorder) GetSecret(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockSecretHelper)(nil).GetSecret), arg0)
}
