# This file is a template, and might need editing before it works on your project.
image: hub-docker.yuntiancloud.com/ci/gobuild:1.21.3-0.1

variables:
  # Please edit to your GitLab project
  REPO_NAME: https://gitlab.vrviu.com/clouddesk/cdp-admin-server
  GOPROXY: https://goproxy.cn,direct
  IMAGE_NAME: cdp-admin-service
  PRO_NAME: cdp-admin-service
  CI: "true"

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p ~/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR ~/$REPO_NAME
  - cd ~/$REPO_NAME

stages:
  # - test
  - build
  - delivery

# UT:
#   stage: test
#   script:
#     - go test -race $(go list ./... | grep -v /vendor/) -coverprofile=coverage.out -args $TEST_ARGS
#     - go tool cover -func=coverage.out
#   artifacts:
#     paths:
#       - coverage.out
#     expire_in: 1 day

# CCK:
#   stage: build
#   script:
#     - go fmt $(go list ./... | grep -v /vendor/)
#     - go vet $(go list ./... | grep -v /vendor/)
    

Compile:
  stage: build
  script:
    - make release
  artifacts:
    paths:
      - $IMAGE_NAME
    expire_in: 1 week

BuildImage:
  image: docker:19.03.13
  only:
    - web
  stage: delivery
  before_script:
    - docker login -u $DOCKER_REGISTER_USER -p $DOCKER_REGISTER_PWD $DOCKER_REGISTER_HOST
    #- docker login -u keane -p 2jqzpIh2Av https://hub-docker.vrviu.com:6000
  script:
    - cd $CI_PROJECT_DIR
    - tag=`date +%Y%m%d%H%M`
    - docker build -t $DOCKER_REGISTER_CLOUDDESK/cgbackend-$IMAGE_NAME:$tag -f  ./docker/Dockerfile .
    - docker push $DOCKER_REGISTER_CLOUDDESK/cgbackend-$IMAGE_NAME:$tag
